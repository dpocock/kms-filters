commit 4f6dd8a4d2a71f23f17aee8807e042b2be2395ad
Author: Daniel Pocock <daniel@pocock.pro>
Date:   Mon Nov 22 15:20:16 2021 +0100

    disable/remove components that require OpenCV

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4fe7525..a476016 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -65,7 +65,7 @@ generic_find(LIBNAME gstreamer-1.0 VERSION ${GST_REQUIRED} REQUIRED)
 generic_find(LIBNAME gstreamer-base-1.0 VERSION ${GST_REQUIRED} REQUIRED)
 generic_find(LIBNAME gstreamer-video-1.0 VERSION ${GST_REQUIRED} REQUIRED)
 generic_find(LIBNAME gstreamer-check-1.0 VERSION ${GST_REQUIRED})
-generic_find(LIBNAME opencv VERSION ${OPENCV_REQUIRED} REQUIRED)
+#generic_find(LIBNAME opencv VERSION ${OPENCV_REQUIRED} REQUIRED)
 generic_find(LIBNAME libsoup-2.4 VERSION ${LIBSOUP_REQUIRED} REQUIRED)
 
 set(CMAKE_INSTALL_GST_PLUGINS_DIR ${CMAKE_INSTALL_LIBDIR}/gstreamer-1.0)
diff --git a/src/gst-plugins/CMakeLists.txt b/src/gst-plugins/CMakeLists.txt
index a20f861..91382b9 100644
--- a/src/gst-plugins/CMakeLists.txt
+++ b/src/gst-plugins/CMakeLists.txt
@@ -1,6 +1,6 @@
-add_subdirectory(facedetector)
-add_subdirectory(faceoverlay)
-add_subdirectory(imageoverlay)
-add_subdirectory(movementdetector)
-add_subdirectory(opencvfilter)
-add_subdirectory(logooverlay)
+#add_subdirectory(facedetector)
+#add_subdirectory(faceoverlay)
+#add_subdirectory(imageoverlay)
+#add_subdirectory(movementdetector)
+#add_subdirectory(opencvfilter)
+#add_subdirectory(logooverlay)
diff --git a/src/server/interface/filters.FaceOverlayFilter.kmd.json b/src/server/interface/filters.FaceOverlayFilter.kmd.json
deleted file mode 100644
index 40874ee..0000000
--- a/src/server/interface/filters.FaceOverlayFilter.kmd.json
+++ /dev/null
@@ -1,57 +0,0 @@
-{
-  "remoteClasses": [
-    {
-      "name": "FaceOverlayFilter",
-      "extends": "Filter",
-      "doc": "FaceOverlayFilter interface. This type of :rom:cls:`Filter` detects faces in a video feed. The face is then overlaid with an image.",
-      "constructor": {
-        "doc": "FaceOverlayFilter interface. This type of :rom:cls:`Filter` detects faces in a video feed. The face is then overlaid with an image.",
-        "params": [
-          {
-            "name": "mediaPipeline",
-            "doc": "pipeline to which this :rom:cls:`Filter` belons",
-            "type": "MediaPipeline"
-          }
-        ]
-      },
-      "methods": [
-        {
-          "name": "unsetOverlayedImage",
-          "doc": "Clear the image to be shown over each detected face. Stops overlaying the faces.",
-          "params": []
-        },
-        {
-          "name": "setOverlayedImage",
-          "doc": "Sets the image to use as overlay on the detected faces.",
-          "params": [
-            {
-              "name": "uri",
-              "doc": "URI where the image is located",
-              "type": "String"
-            },
-            {
-              "name": "offsetXPercent",
-              "doc": "the offset applied to the image, from the X coordinate of the detected face upper right corner. A positive value indicates right displacement, while a negative value moves the overlaid image to the left. This offset is specified as a percentage of the face width.\n\nFor example, to cover the detected face with the overlaid image, the parameter has to be ``0.0``. Values of ``1.0`` or ``-1.0`` indicate that the image upper right corner will be at the face´s X coord, +- the face´s width.\n\n.. note::\n\n    The parameter name is misleading, the value is not a percent but a ratio",
-              "type": "float"
-            },
-            {
-              "name": "offsetYPercent",
-              "doc": "the offset applied to the image, from the Y coordinate of the detected face upper right corner. A positive value indicates up displacement, while a negative value moves the overlaid image down. This offset is specified as a percentage of the face width.\n\nFor example, to cover the detected face with the overlaid image, the parameter has to be ``0.0``. Values of ``1.0`` or ``-1.0`` indicate that the image upper right corner will be at the face´s Y coord, +- the face´s width.\n\n.. note::\n\n    The parameter name is misleading, the value is not a percent but a ratio",
-              "type": "float"
-            },
-            {
-              "name": "widthPercent",
-              "doc": "proportional width of the overlaid image, relative to the width of the detected face. A value of 1.0 implies that the overlaid image will have the same width as the detected face. Values greater than 1.0 are allowed, while negative values are forbidden.\n\n.. note::\n\n    The parameter name is misleading, the value is not a percent but a ratio",
-              "type": "float"
-            },
-            {
-              "name": "heightPercent",
-              "doc": "proportional height of the overlaid image, relative to the height of the detected face. A value of 1.0 implies that the overlaid image will have the same height as the detected face. Values greater than 1.0 are allowed, while negative values are forbidden.\n\n.. note::\n\n    The parameter name is misleading, the value is not a percent but a ratio",
-              "type": "float"
-            }
-          ]
-        }
-      ]
-    }
-  ]
-}
diff --git a/src/server/interface/filters.ImageOverlayFilter.kmd.json b/src/server/interface/filters.ImageOverlayFilter.kmd.json
deleted file mode 100644
index 1f7d33f..0000000
--- a/src/server/interface/filters.ImageOverlayFilter.kmd.json
+++ /dev/null
@@ -1,78 +0,0 @@
-{
-  "remoteClasses": [
-    {
-      "name": "ImageOverlayFilter",
-      "extends": "Filter",
-      "doc": "ImageOverlayFilter interface. This type of :rom:cls:`Filter` draws an image in a configured position over a video feed.",
-      "constructor": {
-        "doc": "ImageOverlayFilter interface. This type of :rom:cls:`Filter` draws an image in a configured position over a video feed.",
-        "params": [
-          {
-            "name": "mediaPipeline",
-            "doc": "pipeline to which this :rom:cls:`Filter` belongs",
-            "type": "MediaPipeline"
-          }
-        ]
-      },
-      "methods": [
-        {
-          "name": "removeImage",
-          "doc": "Remove the image with the given ID.",
-          "params": [
-            {
-              "name": "id",
-              "doc": "Image ID to be removed",
-              "type": "String"
-            }
-          ]
-        },
-        {
-          "name": "addImage",
-          "doc": "Add an image to be used as overlay.",
-          "params": [
-            {
-              "name": "id",
-              "doc": "image ID",
-              "type": "String"
-            },
-            {
-              "name": "uri",
-              "doc": "URI where the image is located",
-              "type": "String"
-            },
-            {
-              "name": "offsetXPercent",
-              "doc": "Percentage relative to the image width to calculate the X coordinate of the position (left upper corner) [0..1]",
-              "type": "float"
-            },
-            {
-              "name": "offsetYPercent",
-              "doc": "Percentage relative to the image height to calculate the Y coordinate of the position (left upper corner) [0..1]",
-              "type": "float"
-            },
-            {
-              "name": "widthPercent",
-              "doc": "Proportional width of the overlaid image, relative to the width of the video [0..1].",
-              "type": "float"
-            },
-            {
-              "name": "heightPercent",
-              "doc": "Proportional height of the overlaid image, relative to the height of the video [0..1].",
-              "type": "float"
-            },
-            {
-              "name": "keepAspectRatio",
-              "doc": "Keep the aspect ratio of the original image.",
-              "type": "boolean"
-            },
-            {
-              "name": "center",
-              "doc": "If the image doesn't fit in the dimensions, the image will be center into the region defined by height and width.",
-              "type": "boolean"
-            }
-          ]
-        }
-      ]
-    }
-  ]
-}
diff --git a/src/server/interface/filters.OpenCVFilter.kmd.json b/src/server/interface/filters.OpenCVFilter.kmd.json
deleted file mode 100644
index e4a6aba..0000000
--- a/src/server/interface/filters.OpenCVFilter.kmd.json
+++ /dev/null
@@ -1,10 +0,0 @@
-{
-  "remoteClasses": [
-    {
-      "name": "OpenCVFilter",
-      "extends": "Filter",
-      "doc": "Generic OpenCV Filter",
-      "abstract" : true
-    }
-  ]
-}
diff --git a/src/server/interface/filters.ZBarFilter.kmd.json b/src/server/interface/filters.ZBarFilter.kmd.json
deleted file mode 100644
index fc20e11..0000000
--- a/src/server/interface/filters.ZBarFilter.kmd.json
+++ /dev/null
@@ -1,41 +0,0 @@
-{
-  "remoteClasses": [
-    {
-      "name": "ZBarFilter",
-      "extends": "Filter",
-      "doc": "This filter detects :term:`QR` codes in a video feed. When a code is found, the filter raises a :rom:evnt:`CodeFound` event.",
-      "constructor": {
-        "doc": "Builder for the :rom:cls:`ZBarFilter`.",
-        "params": [
-          {
-            "name": "mediaPipeline",
-            "doc": "the :rom:cls:`MediaPipeline` to which the filter belongs",
-            "type": "MediaPipeline"
-          }
-        ]
-      },
-      "events": [
-        "CodeFound"
-      ]
-    }
-  ],
-  "events": [
-    {
-      "properties": [
-        {
-          "name": "codeType",
-          "doc": "type of :term:`QR` code found",
-          "type": "String"
-        },
-        {
-          "name": "value",
-          "doc": "value contained in the :term:`QR` code",
-          "type": "String"
-        }
-      ],
-      "extends": "Media",
-      "name": "CodeFound",
-      "doc": "Event raised by a :rom:cls:`ZBarFilter` when a code is found in the data being streamed."
-    }
-  ]
-}
